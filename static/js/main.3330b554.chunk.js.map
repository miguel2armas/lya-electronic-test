{"version":3,"sources":["redux/constants/action-types.js","redux/apiFuntions.js","redux/actions/todoListActions.js","components/home/todoItem.js","assets/images/logo512.png","components/home/todoCreate.js","components/home/home.js","components/header.js","components/footer.js","App.js","reportWebVitals.js","redux/reducers/userReducer.js","redux/reducers/todoListReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["ActionTypes","dataToDoAPI","dispatch","a","axios","get","res","data","reverse","todoList","type","payload","createToDoAPI","post","editToDoAPI","put","_id","deleteToDoAPI","delete","getGatFact","TodoItem","props","useDispatch","useState","editTodo","setEditTodo","editDescriptionTodo","setEditDescriptionTodo","changeComplete","complete","todoListDataChage","deleteToDo","saveEditDescription","todoL","description","Alert","variant","className","Card","onClick","size","Col","moment","dateMax","format","createAt","Button","Form","Control","onChange","e","target","value","as","rows","TodoCreate","initData","Date","title","useEffect","getDataCat","todoDataCreate","setTodoDataCreate","btnCreateTodo","setBtnCreateTodo","btnFactCat","setBtnFactCat","dataCatSelect","setDataCatSelect","dataCat","setDataCat","setFactsCatsMsg","preventDefault","i","parseInt","fact","createTodo","date","setData","NotificationManager","warning","Body","onSubmit","Row","xs","Group","controlId","Select","disabled","Spinner","animation","Label","dateFormat","selected","Home","todoListData","useSelector","state","selectOrder","setSelectOrder","todoListDataState","setTodoListDataState","todoListload","settodoListload","length","Container","md","sort","b","changeOrder","src","logoImg","map","key","Header","Navbar","bg","Brand","href","LogoImg","width","alt","Footer","year","getFullYear","rel","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","intialState","idUser","firstName","lastName","emailUser","reducers","combineReducers","user","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3330b554.chunk.js","sourcesContent":["export const ActionTypes = {\r\n    SET_USER: \"SET_USER\",\r\n    CREATE_TODO_LIST: \"CREATE_TODO_LIST\",\r\n    DELETE_TODO_LIST: \"DELETE_TODO_LIST\",\r\n    CHANGE_STATUS_TODO_LIST: \"CHANGE_STATUS_TODO_LIST\",\r\n    EDIT_TODO_LIST: \"EDIT_TODO_LIST\",\r\n    COMPLETE_TODO_LIST: \"COMPLETE_TODO_LIST\",\r\n    INIT_TODO_LIST: \"INIT_TODO_LIST\"\r\n};\r\n","import axios from \"axios\";\r\nimport {initTodoData} from \"./actions/todoListActions\";\r\n\r\n\r\nexport const dataToDoAPI = async (dispatch) =>{\r\n    const res = await axios.get('https://lya-electronic-test.herokuapp.com/api/ToDo');\r\n    res.data.reverse();\r\n    dispatch(initTodoData(res.data));\r\n}\r\nexport const createToDoAPI = async (dispatch, data) =>{\r\n    await axios.post('https://lya-electronic-test.herokuapp.com/api/ToDo', data);\r\n    await dataToDoAPI(dispatch);\r\n}\r\n\r\nexport const editToDoAPI = async (dispatch, data) =>{\r\n    await axios.put('https://lya-electronic-test.herokuapp.com/api/ToDo/'+data._id, data);\r\n    await dataToDoAPI(dispatch);\r\n}\r\nexport const deleteToDoAPI = async (dispatch, data) =>{\r\n    await axios.delete('https://lya-electronic-test.herokuapp.com/api/ToDo/'+data._id);\r\n    await dataToDoAPI(dispatch);\r\n}\r\nexport const getGatFact = async () =>{\r\n   const res = await axios.get('https://catfact.ninja/facts');\r\n   return res.data;\r\n}","import { ActionTypes } from \"../constants/action-types\";\r\n\r\nexport const createTodoData = (todoList) => {\r\n    return {\r\n        type: ActionTypes.CREATE_TODO_LIST,\r\n        payload: todoList,\r\n    };\r\n};\r\nexport const setCompleteTodoData = (todoList) => {\r\n    return {\r\n        type: ActionTypes.COMPLETE_TODO_LIST,\r\n        payload: todoList,\r\n    };\r\n};\r\nexport const initTodoData = (todoList) => {\r\n    return {\r\n        type: ActionTypes.INIT_TODO_LIST,\r\n        payload: todoList,\r\n    };\r\n};","import React, {useState} from \"react\";\r\nimport {Alert, Button, Card, Col, Form} from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\nimport {deleteToDoAPI, editToDoAPI} from \"../../redux/apiFuntions\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {AiOutlineCheckCircle, IoMdSave, MdDeleteForever, MdRadioButtonUnchecked, RiEdit2Fill} from \"react-icons/all\";\r\n\r\nconst TodoItem = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [editTodo, setEditTodo] = useState(false);\r\n    const [editDescriptionTodo, setEditDescriptionTodo] = useState(\"\");\r\n    const changeComplete = async (data) => {\r\n        await editToDoAPI(dispatch, {...data, complete: !data.complete});\r\n        props.todoListDataChage();\r\n    };\r\n    const deleteToDo = async (data) => {\r\n        await deleteToDoAPI(dispatch, data);\r\n        props.todoListDataChage();\r\n    };\r\n    const editDescription = ()=>{\r\n        setEditDescriptionTodo(props.todoL.description);\r\n        setEditTodo(true);\r\n    }\r\n    const saveEditDescription = async () =>{\r\n        await editToDoAPI(dispatch, {...props.todoL, description: editDescriptionTodo});\r\n        props.todoListDataChage();\r\n        setEditTodo(false);\r\n    }\r\n\r\n  return <Alert variant={props.todoL.complete?(\"success\"):(\"secondary\")}>\r\n            <div className=\"d-flex\">\r\n                <div className=\"align-self-center pe-3\">\r\n                    {props.todoL.complete?(\r\n                        <Card className=\"p-1 bg-success text-white\" onClick={()=>changeComplete(props.todoL)}>\r\n                            <AiOutlineCheckCircle size=\"2em\"/>\r\n                        </Card>\r\n                    ):(\r\n                        <Card className=\"p-1 bg-secondary text-white\" onClick={()=>changeComplete(props.todoL)}>\r\n                            <MdRadioButtonUnchecked size=\"2em\"/>\r\n                        </Card>\r\n                    )}\r\n                </div>\r\n                <Col>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <span>Expire: {moment(props.todoL.dateMax).format(\"YYYY/MM/DD\")}</span>\r\n                        <span>Create: {moment(props.todoL.createAt).format(\"YYYY/MM/DD HH:mm\")}</span>\r\n                        <div>\r\n                            {editTodo?(\r\n                                <Button variant={\"success\"} onClick={()=>saveEditDescription()}>\r\n                                    <IoMdSave size=\"1.5em\"/>\r\n                                </Button>\r\n                            ):(\r\n                                <Button variant={\"primary\"} onClick={()=>editDescription()}>\r\n                                    <RiEdit2Fill size=\"1.5em\"/>\r\n                                </Button>\r\n                            )}\r\n                            <Button variant={\"danger\"} className=\"mx-2\" onClick={()=>deleteToDo(props.todoL)}>\r\n                                <MdDeleteForever size=\"1.5em\"/>\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                    <hr className=\"my-1\"/>\r\n                    {editTodo?(\r\n                        <Form.Control onChange={(e)=> setEditDescriptionTodo(e.target.value)}\r\n                                      as=\"textarea\" rows={2} value={editDescriptionTodo}/>\r\n                    ):(\r\n                        <span>{props.todoL.description}</span>\r\n                    )}\r\n                </Col>\r\n            </div>\r\n          </Alert>\r\n}\r\nexport default TodoItem","export default __webpack_public_path__ + \"static/media/logo512.8036e316.png\";","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Card, Col, Form, Row, Spinner} from \"react-bootstrap\";\r\nimport {HiOutlineSave} from \"react-icons/all\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport {createToDoAPI, getGatFact} from \"../../redux/apiFuntions\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {NotificationManager} from 'react-notifications';\r\nconst TodoCreate = (props) => {\r\n    const dispatch = useDispatch();\r\n    const initData = {\r\n        dateMax: new Date(),\r\n        title: \"0\",\r\n        description: \"\",\r\n    };\r\n    useEffect(()=>{\r\n        getDataCat();\r\n    }, []);\r\n    const [todoDataCreate, setTodoDataCreate] = useState(initData);\r\n    const [btnCreateTodo, setBtnCreateTodo] = useState(false);\r\n    const [btnFactCat, setBtnFactCat] = useState(false);\r\n    const [dataCatSelect, setDataCatSelect] = useState(\"1\");\r\n    const [dataCat, setDataCat] = useState([]);\r\n    const getDataCat = async () =>{\r\n        const data = await getGatFact();\r\n        setDataCat(data);\r\n    }\r\n    const setFactsCatsMsg = async (e)=>{\r\n        setBtnFactCat(true);\r\n        e.preventDefault();\r\n        let data = \"\";\r\n        for (let i= 0; i <parseInt(dataCatSelect); i++){\r\n            data= data + dataCat.data[i].fact + ' ';\r\n        }\r\n        setTodoDataCreate({...todoDataCreate, description: `${todoDataCreate.description} ${data}`});\r\n        await getDataCat();\r\n        setBtnFactCat(false);\r\n    }\r\n    const createTodo = async (e)=>{\r\n        setBtnCreateTodo(true);\r\n        e.preventDefault();\r\n        if(todoDataCreate.description!==\"\"){\r\n            let date =  new Date();\r\n            const setData = {\r\n                dateMax: todoDataCreate.dateMax,\r\n                title: todoDataCreate.title,\r\n                description: todoDataCreate.description,\r\n                complete: false,\r\n                createAt: date\r\n            };\r\n            await createToDoAPI(dispatch, setData);\r\n            setTodoDataCreate(initData);\r\n            props.todoListDataChage();\r\n        }else{\r\n            NotificationManager.warning('please write a description', 'Error');\r\n        }\r\n\r\n        setBtnCreateTodo(false);\r\n    }\r\n  return <Card className=\"my-2\">\r\n      <Card.Body>\r\n          <div className=\"d-flex justify-content-between align-content-center\">\r\n              <span className=\"fs-2\">Create To Do</span>\r\n              <Form onSubmit={(e)=>setFactsCatsMsg(e)}>\r\n                  <Row>\r\n                      <Col className=\"align-self-center\" xs=\"auto\">\r\n                          Add Cat Facts\r\n                      </Col>\r\n                      <Col xs=\"auto\" className=\"pe-1\">\r\n                          <Form.Group as={Col} controlId=\"formGridState\">\r\n                              <Form.Select value={dataCatSelect} onChange={(e) => setDataCatSelect(e.target.value)}>\r\n                                  <option value=\"1\">1</option>\r\n                                  <option value=\"2\">2</option>\r\n                                  <option value=\"3\">3</option>\r\n                                  <option value=\"4\">4</option>\r\n                                  <option value=\"5\">5</option>\r\n                                  <option value=\"6\">6</option>\r\n                                  <option value=\"7\">7</option>\r\n                                  <option value=\"8\">8</option>\r\n                                  <option value=\"9\">9</option>\r\n                                  <option value=\"10\">10</option>\r\n                              </Form.Select>\r\n                          </Form.Group>\r\n                      </Col>\r\n                      <Col xs=\"auto\" className=\"ps-0\">\r\n                          {btnFactCat?(\r\n                              <Button type={\"submit\"} variant={\"primary\"} className=\"py-2 px-3\" disabled={true}>\r\n                                  <Spinner animation=\"border\" variant=\"light\" size={\"sm\"}/>\r\n                              </Button>\r\n                          ):(\r\n                              <Button variant=\"primary\" type=\"submit\">\r\n                                  <HiOutlineSave size=\"1.5em\"/>\r\n                              </Button>\r\n                          )}\r\n\r\n                      </Col>\r\n                  </Row>\r\n              </Form>\r\n          </div>\r\n          <Form onSubmit={(e)=>createTodo(e)}>\r\n              <Form.Group className=\"mb-3\">\r\n                  <Form.Label>type</Form.Label>\r\n                  <Form.Select value={todoDataCreate.title} onChange={(e) => setTodoDataCreate({...todoDataCreate, title: e.target.value})}>\r\n                      <option value=\"0\">Regular To-Do</option>\r\n                      <option value=\"1\">Priority One</option>\r\n                      <option value=\"2\">Priority Two</option>\r\n                      <option value=\"3\">Priority Three</option>\r\n                  </Form.Select>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Description</Form.Label>\r\n                  <Form.Control onChange={(e)=> setTodoDataCreate({...todoDataCreate, description: e.target.value})}\r\n                                as=\"textarea\" rows={3} value={todoDataCreate.description}/>\r\n              </Form.Group>\r\n              <div className=\"d-flex justify-content-between\">\r\n                  <span className=\"mx-2\">Expire:</span>\r\n                  <DatePicker\r\n                      dateFormat=\"yyyy/MM/dd\"\r\n                      selected={todoDataCreate.dateMax}\r\n                      onChange={(date) => setTodoDataCreate({...todoDataCreate, dateMax: date})}\r\n                  />\r\n                  <Col xs={6} className=\"text-end\">\r\n                      {btnCreateTodo?(\r\n                          <Button type={\"submit\"} variant={\"success\"} disabled={true}>\r\n                              <span className=\"mx-2\"><Spinner animation=\"border\" variant=\"light\" size={\"sm\"}/>loading...</span>\r\n                          </Button>\r\n                      ):(\r\n                          <Button type={\"submit\"} variant={\"success\"}>\r\n                              Create To-Do\r\n                          </Button>\r\n                      )}\r\n                  </Col>\r\n              </div>\r\n          </Form>\r\n      </Card.Body>\r\n  </Card>\r\n}\r\nexport default TodoCreate","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Button, Col, Container, Form, Row} from \"react-bootstrap\";\r\nimport {dataToDoAPI} from \"../../redux/apiFuntions\";\r\nimport TodoItem from \"./todoItem\";\r\nimport logoImg from \"../../assets/images/logo512.png\"\r\nimport TodoCreate from \"./todoCreate\";\r\nimport {ImSortAmountDesc} from \"react-icons/all\";\r\nconst Home = () => {\r\n    const dispatch = useDispatch();\r\n    let todoListData = useSelector((state)=>state.todoList);\r\n    const [selectOrder, setSelectOrder] = useState(\"\");\r\n    const [todoListDataState, setTodoListDataState] = useState([]);\r\n    const [todoListload, settodoListload] = useState(false);\r\n    const todoListDataChage = () => settodoListload(true);\r\n    useEffect(()=>{\r\n        if(todoListDataState.length===0){\r\n            todoListDataChage();\r\n        }\r\n        if(todoListload){\r\n            setTodoListDataState(todoListData);\r\n            settodoListload(false);\r\n        }\r\n        dataToDoAPI(dispatch);\r\n    }, [todoListData])\r\n    const changeOrder = (e) =>{\r\n        e.preventDefault();\r\n        todoListDataState.sort(function (a, b) {\r\n            if (a.description > b.description) {\r\n                return 1;\r\n            }\r\n            if (a.description < b.description) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n        setTodoListDataState(todoListDataState);\r\n    }\r\n\r\n  return <div className=\"py-4\">\r\n        <Container>\r\n            <Row className=\"justify-content-center\">\r\n                <Col xs={12} md={8}>\r\n                    <TodoCreate todoListDataChage={todoListDataChage}/>\r\n                </Col>\r\n                <Col xs={12} md={12}>\r\n\r\n                    {todoListDataState.length===0?(\r\n                        <></>\r\n                    ):(\r\n                        <div className=\"py-3\">\r\n                            <Form onSubmit={(e)=>changeOrder(e)}>\r\n                                <Row>\r\n                                    <Col className=\"align-self-center\" xs=\"auto\">\r\n                                        Change order\r\n                                    </Col>\r\n                                    <Col xs=\"auto\" className=\"pe-1\">\r\n                                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                                            <Form.Select value={selectOrder} onChange={(e) => setSelectOrder(e.target.value)}>\r\n                                                <option value=\"title\">title</option>\r\n                                                <option value=\"description\">description</option>\r\n                                                <option value=\"dateMax\">date of expire</option>\r\n                                                <option value=\"createAt\">date create</option>\r\n                                            </Form.Select>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col xs=\"auto\" className=\"mx-3\">\r\n                                        <Button variant=\"primary\" type=\"submit\">\r\n                                            <ImSortAmountDesc size=\"1.5em\"/>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </div>\r\n                    )}\r\n                    {todoListDataState.length===0?(\r\n                        <div className=\"text-center\"><img src={logoImg} className=\"img-fluid\"/></div>\r\n                    ):(\r\n                        todoListDataState.map((todoL, key)=>{\r\n                            return <TodoItem key={key} todoL={todoL} todoListDataChage={todoListDataChage}/>\r\n                        })\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        </div>\r\n}\r\nexport default Home","import React from \"react\";\r\nimport {Container, Navbar} from \"react-bootstrap\";\r\nimport LogoImg from \"../assets/images/logo512.png\"\r\n\r\nconst Header = () => {\r\n  return <header>\r\n          <Navbar bg=\"dark\" variant=\"dark\">\r\n            <Container>\r\n              <Navbar.Brand href=\"/\">\r\n                  <img src={LogoImg} className=\"mx-3 d-inline-block\" width=\"40\" alt=\"img-logo\"/>\r\n                  LYA Electronic To-Do\r\n              </Navbar.Brand>\r\n            </Container>\r\n          </Navbar>\r\n      </header>\r\n}\r\nexport default Header","import React from \"react\";\r\nimport logoImg from \"../assets/images/logo512.png\"\r\nimport {Container} from \"react-bootstrap\";\r\nconst Footer = () => {\r\n    let today = new Date();\r\n    let year = today.getFullYear();\r\n  return <footer className=\"border-top py-3 mt-auto\">\r\n              <Container>\r\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                      <p className=\"col-md-5 mb-0 text-muted\">{year} LYA Electronic To-Do</p>\r\n                      <a href=\"/\"\r\n                         className=\"col-md-2 d-flex align-items-center justify-content-center me-md-auto m-auto link-dark text-decoration-none\">\r\n                          <img src={logoImg} alt=\"logo\" className=\"img-fluid\" width=\"70\"/>\r\n                      </a>\r\n                      <ul className=\"nav col-md-5 col-12 justify-content-md-end justify-content-center\">\r\n                          <li className=\"nav-item\">\r\n                              <a href=\"https://wa.me/573146869798\" target=\"_blank\" rel=\"noreferrer\" className=\"nav-link px-2 text-muted\">WhatsApp</a>\r\n                          </li>\r\n                          <li className=\"nav-item\">\r\n                              <a href=\"https://github.com/miguel2armas\" target=\"_blank\" rel=\"noreferrer\" className=\"nav-link px-2 text-muted\">GitHub</a>\r\n                          </li>\r\n                          <li className=\"nav-item\">\r\n                              <a href=\"https://miguel-armas.com/\" target=\"_blank\" rel=\"noreferrer\" className=\"nav-link px-2 text-muted\">miguel-armas.com</a>\r\n                          </li>\r\n                      </ul>\r\n                  </div>\r\n              </Container>\r\n  </footer>\r\n}\r\nexport default Footer","import 'bootstrap/dist/css/bootstrap.min.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'react-notifications/lib/notifications.css';\nimport './App.css';\nimport Home from \"./components/home/home\";\nimport Header from \"./components/header\";\nimport Footer from \"./components/footer\";\nimport {NotificationContainer} from 'react-notifications';\nfunction App() {\n  return (\n    <div>\n        <Header/>\n        <Home/>\n        <Footer/>\n        <NotificationContainer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ActionTypes } from \"../constants/action-types\";\r\n\r\nconst intialState = {\r\n    idUser: 1,\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    emailUser: \"\"\r\n};\r\nexport const userReducer = (state = intialState, { type, payload }) => {\r\n    switch (type) {\r\n        case ActionTypes.SET_USER:\r\n            return { ...state, user: payload };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { ActionTypes } from \"../constants/action-types\";\r\n//let todoList = localStorage.getItem('ToDoList')===null?[] : JSON.parse(localStorage.getItem('ToDoList'));\r\n\r\n\r\nconst intialState = [];\r\nexport const todoListReducer = (state = intialState, { type, payload }) => {\r\n    switch (type) {\r\n        case ActionTypes.INIT_TODO_LIST:\r\n            return payload;\r\n        case ActionTypes.CREATE_TODO_LIST:\r\n            return payload;\r\n        case ActionTypes.COMPLETE_TODO_LIST:\r\n            return payload;\r\n        case ActionTypes.EDIT_TODO_LIST:\r\n            return { ...state, todoList: payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import { combineReducers } from \"redux\";\r\nimport {userReducer} from \"./userReducer\";\r\nimport {todoListReducer} from \"./todoListReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    user: userReducer,\r\n    todoList: todoListReducer\r\n});\r\nexport default reducers;","import { createStore } from \"redux\";\r\n\r\nimport reducers from \"./reducers/index\";\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    {},\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}