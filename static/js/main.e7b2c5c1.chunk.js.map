{"version":3,"sources":["redux/constants/action-types.js","redux/apiFuntions.js","redux/actions/todoListActions.js","components/home/todoItem.js","assets/images/lock_Animation.svg","components/home/todoCreate.js","components/home/home.js","assets/images/logo512.png","components/header.js","components/footer.js","App.js","reportWebVitals.js","redux/reducers/todoListReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["ActionTypes","dataToDoAPI","dispatch","a","axios","get","res","data","reverse","todoList","type","payload","createToDoAPI","post","editToDoAPI","put","_id","deleteToDoAPI","delete","getGatFact","TodoItem","props","useDispatch","useState","editTodo","setEditTodo","btnDeleteTodo","setDeleteTodo","editDescriptionTodo","setEditDescriptionTodo","changeComplete","complete","todoListDataChage","deleteToDo","saveEditDescription","todoL","description","Alert","variant","Row","Col","xs","className","Card","onClick","size","title","md","moment","dateMax","format","createAt","Button","disabled","Spinner","animation","Form","Control","onChange","e","target","value","as","rows","TodoCreate","initData","Date","useEffect","getDataCat","todoDataCreate","setTodoDataCreate","btnCreateTodo","setBtnCreateTodo","btnFactCat","setBtnFactCat","dataCatSelect","setDataCatSelect","dataCat","setDataCat","setFactsCatsMsg","i","parseInt","fact","createTodo","preventDefault","date","setData","NotificationManager","warning","Body","onSubmit","Group","Label","Select","controlId","dateFormat","selected","Home","todoListData","useSelector","state","selectOrder","setSelectOrder","todoListDataState","setTodoListDataState","todoListload","settodoListload","length","Container","sort","b","changeOrder","logoImg","width","map","Header","Navbar","bg","Brand","href","src","LogoImg","alt","Footer","year","getFullYear","rel","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","intialState","reducers","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7b2c5c1.chunk.js","sourcesContent":["export const ActionTypes = {\r\n    CREATE_TODO_LIST: \"CREATE_TODO_LIST\",\r\n    EDIT_TODO_LIST: \"EDIT_TODO_LIST\",\r\n    COMPLETE_TODO_LIST: \"COMPLETE_TODO_LIST\",\r\n    INIT_TODO_LIST: \"INIT_TODO_LIST\"\r\n};\r\n","import axios from \"axios\";\r\nimport {initTodoData} from \"./actions/todoListActions\";\r\n\r\n\r\nexport const dataToDoAPI = async (dispatch) =>{\r\n    const res = await axios.get('https://lya-electronic-test.herokuapp.com/api/ToDo');\r\n    res.data.reverse();\r\n    dispatch(initTodoData(res.data));\r\n}\r\nexport const createToDoAPI = async (dispatch, data) =>{\r\n    await axios.post('https://lya-electronic-test.herokuapp.com/api/ToDo', data);\r\n    await dataToDoAPI(dispatch);\r\n}\r\n\r\nexport const editToDoAPI = async (dispatch, data) =>{\r\n    await axios.put('https://lya-electronic-test.herokuapp.com/api/ToDo/'+data._id, data);\r\n    await dataToDoAPI(dispatch);\r\n}\r\nexport const deleteToDoAPI = async (dispatch, data) =>{\r\n    await axios.delete('https://lya-electronic-test.herokuapp.com/api/ToDo/'+data._id);\r\n    await dataToDoAPI(dispatch);\r\n}\r\nexport const getGatFact = async () =>{\r\n   const res = await axios.get('https://catfact.ninja/facts');\r\n   return res.data;\r\n}","import { ActionTypes } from \"../constants/action-types\";\r\n\r\nexport const createTodoData = (todoList) => {\r\n    return {\r\n        type: ActionTypes.CREATE_TODO_LIST,\r\n        payload: todoList,\r\n    };\r\n};\r\nexport const setCompleteTodoData = (todoList) => {\r\n    return {\r\n        type: ActionTypes.COMPLETE_TODO_LIST,\r\n        payload: todoList,\r\n    };\r\n};\r\nexport const initTodoData = (todoList) => {\r\n    return {\r\n        type: ActionTypes.INIT_TODO_LIST,\r\n        payload: todoList,\r\n    };\r\n};","import React, {useState} from \"react\";\r\nimport {Alert, Button, Card, Col, Form, Row, Spinner} from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\nimport {deleteToDoAPI, editToDoAPI} from \"../../redux/apiFuntions\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {\r\n    AiOutlineCheckCircle,\r\n    FcHighPriority, FcLowPriority, FcMediumPriority, FcTodoList,\r\n    IoMdSave,\r\n    MdDeleteForever,\r\n    MdRadioButtonUnchecked,\r\n    RiEdit2Fill\r\n} from \"react-icons/all\";\r\n\r\nconst TodoItem = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [editTodo, setEditTodo] = useState(false);\r\n    const [btnDeleteTodo, setDeleteTodo] = useState(false);\r\n    const [editDescriptionTodo, setEditDescriptionTodo] = useState(\"\");\r\n    const changeComplete = async (data) => {\r\n        await editToDoAPI(dispatch, {...data, complete: !data.complete});\r\n        props.todoListDataChage();\r\n    };\r\n    const deleteToDo = async (data) => {\r\n        setDeleteTodo(true);\r\n        await deleteToDoAPI(dispatch, data);\r\n        props.todoListDataChage();\r\n        setDeleteTodo(false);\r\n    };\r\n    const editDescription = ()=>{\r\n        setEditDescriptionTodo(props.todoL.description);\r\n        setEditTodo(true);\r\n    }\r\n    const saveEditDescription = async () =>{\r\n        await editToDoAPI(dispatch, {...props.todoL, description: editDescriptionTodo});\r\n        props.todoListDataChage();\r\n        setEditTodo(false);\r\n    }\r\n\r\n  return <Alert variant={props.todoL.complete?(\"success\"):(\"secondary\")}>\r\n            <Row>\r\n                <Col xs={\"auto\"} className=\"d-flex\">\r\n                    <div>\r\n                        {props.todoL.complete?(\r\n                            <Card className=\"p-1 bg-success border text-white\" onClick={()=>changeComplete(props.todoL)}>\r\n                                <AiOutlineCheckCircle size=\"2em\"/>\r\n                            </Card>\r\n                        ):(\r\n                            <Card className=\"p-1 bg-secondary border text-white\" onClick={()=>changeComplete(props.todoL)}>\r\n                                <MdRadioButtonUnchecked size=\"2em\"/>\r\n                            </Card>\r\n                        )}\r\n                    </div>\r\n                    {props.todoL.title===1?(\r\n                        <FcHighPriority size=\"1.5em\" className=\"align-self-md-center align-self-start my-2 mx-2\"/>\r\n                    ):props.todoL.title===2?(\r\n                        <FcMediumPriority size=\"1.5em\" className=\"align-self-md-center align-self-start my-2 mx-2\"/>\r\n                    ):props.todoL.title===3?(\r\n                        <FcLowPriority size=\"1.5em\" className=\"align-self-md-center align-self-start my-2 mx-2\"/>\r\n                    ):(\r\n                        <FcTodoList size=\"1.5em\" className=\"align-self-md-center align-self-start my-2 mx-2\"/>\r\n                    )}\r\n                </Col>\r\n                <Col>\r\n                    <Row>\r\n                        <Col xs={12} md={4} className=\"text-end align-self-center\">\r\n                            <span>Expire: {moment(props.todoL.dateMax).format(\"YYYY/MM/DD\")}</span>\r\n                        </Col>\r\n                        <Col xs={12} md={4} className=\"text-end align-self-center\">\r\n                            <span>Create: {moment(props.todoL.createAt).format(\"YYYY/MM/DD HH:mm\")}</span>\r\n                        </Col>\r\n                        <Col xs={12} md={4} className=\"text-end\">\r\n                            {editTodo?(\r\n                                <Button variant={\"success\"} onClick={()=>saveEditDescription()}>\r\n                                    <IoMdSave size=\"1.5em\"/>\r\n                                </Button>\r\n                            ):(\r\n                                <Button variant={\"primary\"} onClick={()=>editDescription()}>\r\n                                    <RiEdit2Fill size=\"1.5em\"/>\r\n                                </Button>\r\n                            )}\r\n                            {btnDeleteTodo?(\r\n                                <Button variant={\"danger\"} className=\"mx-2\" disabled={true}>\r\n                                    <Spinner animation=\"border\" variant=\"light\" className=\"m-1\" size={\"sm\"}/>\r\n                                </Button>\r\n                            ):(\r\n                                <Button variant={\"danger\"} className=\"mx-2\" onClick={()=>deleteToDo(props.todoL)}>\r\n                                    <MdDeleteForever size=\"1.5em\"/>\r\n                                </Button>\r\n                            )}\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={12}>\r\n                    <hr className=\"my-1\"/>\r\n                    {editTodo?(\r\n                        <Form.Control onChange={(e)=> setEditDescriptionTodo(e.target.value)}\r\n                                      as=\"textarea\" rows={2} value={editDescriptionTodo}/>\r\n                    ):(\r\n                        <span>{props.todoL.description}</span>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n          </Alert>\r\n}\r\nexport default TodoItem","export default __webpack_public_path__ + \"static/media/lock_Animation.cf7bed24.svg\";","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Card, Col, Form, Row, Spinner} from \"react-bootstrap\";\r\nimport {HiOutlineSave} from \"react-icons/all\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport {createToDoAPI, getGatFact} from \"../../redux/apiFuntions\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {NotificationManager} from 'react-notifications';\r\nconst TodoCreate = (props) => {\r\n    const dispatch = useDispatch();\r\n    const initData = {\r\n        dateMax: new Date(),\r\n        title: \"0\",\r\n        description: \"\",\r\n    };\r\n    useEffect(()=>{\r\n        getDataCat();\r\n    }, []);\r\n    const [todoDataCreate, setTodoDataCreate] = useState(initData);\r\n    const [btnCreateTodo, setBtnCreateTodo] = useState(false);\r\n    const [btnFactCat, setBtnFactCat] = useState(false);\r\n    const [dataCatSelect, setDataCatSelect] = useState(\"1\");\r\n    const [dataCat, setDataCat] = useState([]);\r\n    const getDataCat = async () =>{\r\n        const data = await getGatFact();\r\n        setDataCat(data);\r\n    }\r\n    const setFactsCatsMsg = async ()=>{\r\n        setBtnFactCat(true);\r\n        let data = \"\";\r\n        for (let i= 0; i <parseInt(dataCatSelect); i++){\r\n            data= data + dataCat.data[i].fact + ' ';\r\n        }\r\n        setTodoDataCreate({...todoDataCreate, description: `${todoDataCreate.description} ${data}`});\r\n        await getDataCat();\r\n        setBtnFactCat(false);\r\n    }\r\n    const createTodo = async (e)=>{\r\n        setBtnCreateTodo(true);\r\n        e.preventDefault();\r\n        if(todoDataCreate.description!==\"\"){\r\n            let date =  new Date();\r\n            const setData = {\r\n                dateMax: todoDataCreate.dateMax,\r\n                title: todoDataCreate.title,\r\n                description: todoDataCreate.description,\r\n                complete: false,\r\n                createAt: date\r\n            };\r\n            await createToDoAPI(dispatch, setData);\r\n            setTodoDataCreate(initData);\r\n            props.todoListDataChage();\r\n        }else{\r\n            NotificationManager.warning('please write a description', 'Error');\r\n        }\r\n\r\n        setBtnCreateTodo(false);\r\n    }\r\n  return <Card className=\"my-2\">\r\n      <Card.Body>\r\n          <Col className=\"text-center\">\r\n              <span className=\"fs-2\">Create To Do</span>\r\n          </Col>\r\n          <Form onSubmit={(e)=>createTodo(e)}>\r\n              <Form.Group className=\"mb-3\">\r\n                  <Form.Label>type</Form.Label>\r\n                  <Form.Select value={todoDataCreate.title} onChange={(e) => setTodoDataCreate({...todoDataCreate, title: e.target.value})}>\r\n                      <option value=\"0\">Regular To-Do</option>\r\n                      <option value=\"1\">Priority One</option>\r\n                      <option value=\"2\">Priority Two</option>\r\n                      <option value=\"3\">Priority Three</option>\r\n                  </Form.Select>\r\n              </Form.Group>\r\n              <Form.Group className=\"d-flex justify-content-end\">\r\n                  <div className=\"d-flex justify-content-between align-content-center\">\r\n                          <Row>\r\n                              <Col className=\"align-self-center\" xs=\"auto\">\r\n                                  Add Cat Facts\r\n                              </Col>\r\n                              <Col xs=\"auto\" className=\"pe-1\">\r\n                                  <Form.Group as={Col} controlId=\"formGridState\">\r\n                                      <Form.Select value={dataCatSelect} onChange={(e) => setDataCatSelect(e.target.value)}>\r\n                                          <option value=\"1\">1</option>\r\n                                          <option value=\"2\">2</option>\r\n                                          <option value=\"3\">3</option>\r\n                                          <option value=\"4\">4</option>\r\n                                          <option value=\"5\">5</option>\r\n                                          <option value=\"6\">6</option>\r\n                                          <option value=\"7\">7</option>\r\n                                          <option value=\"8\">8</option>\r\n                                          <option value=\"9\">9</option>\r\n                                          <option value=\"10\">10</option>\r\n                                      </Form.Select>\r\n                                  </Form.Group>\r\n                              </Col>\r\n                              <Col xs=\"auto\" className=\"ps-0\">\r\n                                  {btnFactCat?(\r\n                                      <Button variant={\"primary\"} className=\"py-2 px-3\" disabled={true}>\r\n                                          <Spinner animation=\"border\" variant=\"light\" size={\"sm\"}/>\r\n                                      </Button>\r\n                                  ):(\r\n                                      <Button variant=\"primary\" onClick={()=>setFactsCatsMsg()}>\r\n                                          <HiOutlineSave size=\"1.5em\"/>\r\n                                      </Button>\r\n                                  )}\r\n\r\n                              </Col>\r\n                          </Row>\r\n                  </div>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-md-3\">\r\n                  <Form.Label>Description</Form.Label>\r\n                  <Form.Control onChange={(e)=> setTodoDataCreate({...todoDataCreate, description: e.target.value})}\r\n                                as=\"textarea\" rows={3} value={todoDataCreate.description}/>\r\n              </Form.Group>\r\n              <Row>\r\n                  <span className=\"mx-md-2\">Expire:</span>\r\n                  <Col>\r\n                      <DatePicker\r\n                          dateFormat=\"yyyy/MM/dd\"\r\n                          selected={todoDataCreate.dateMax}\r\n                          onChange={(date) => setTodoDataCreate({...todoDataCreate, dateMax: date})}\r\n                      />\r\n                  </Col>\r\n                  <Col xs={12} md={6} className=\"text-center text-md-end mt-md-0 mt-2\" >\r\n                      {btnCreateTodo?(\r\n                          <Button type={\"submit\"} variant={\"success\"} disabled={true}>\r\n                              <span className=\"mx-2\"><Spinner animation=\"border\" variant=\"light\" size={\"sm\"}/>loading...</span>\r\n                          </Button>\r\n                      ):(\r\n                          <Button type={\"submit\"} variant={\"success\"}>\r\n                              Create To-Do\r\n                          </Button>\r\n                      )}\r\n                  </Col>\r\n              </Row>\r\n          </Form>\r\n      </Card.Body>\r\n  </Card>\r\n}\r\nexport default TodoCreate","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Button, Col, Container, Form, Row} from \"react-bootstrap\";\r\nimport {dataToDoAPI} from \"../../redux/apiFuntions\";\r\nimport TodoItem from \"./todoItem\";\r\nimport logoImg from \"../../assets/images/lock_Animation.svg\"\r\nimport TodoCreate from \"./todoCreate\";\r\nimport {ImSortAmountDesc} from \"react-icons/all\";\r\nimport { AnimateGroup } from 'react-animation'\r\nconst Home = () => {\r\n    const dispatch = useDispatch();\r\n    let todoListData = useSelector((state)=>state.todoList);\r\n    const [selectOrder, setSelectOrder] = useState(\"description\");\r\n    const [todoListDataState, setTodoListDataState] = useState([]);\r\n    const [todoListload, settodoListload] = useState(false);\r\n    const todoListDataChage = () => settodoListload(true);\r\n    useEffect(()=>{\r\n        if(todoListDataState.length===0){\r\n            todoListDataChage();\r\n        }\r\n        if(todoListload){\r\n            setTodoListDataState(todoListData);\r\n            settodoListload(false);\r\n        }\r\n        dataToDoAPI(dispatch);\r\n    }, [todoListData])\r\n    const changeOrder = (e) =>{\r\n        e.preventDefault();\r\n        todoListDataState.sort(function (a, b) {\r\n            switch (selectOrder){\r\n                case \"description\":\r\n                    if (a.description > b.description) return 1;\r\n                    if (a.description < b.description) return -1;\r\n                    return 0;\r\n                case \"title\":\r\n                    if (a.title > b.title) return 1;\r\n                    if (a.title < b.title) return -1;\r\n                    return 0;\r\n                case \"dateMax\":\r\n                    if (a.dateMax > b.dateMax) return 1;\r\n                    if (a.dateMax < b.dateMax) return -1;\r\n                    return 0;\r\n                case \"createAt\":\r\n                    if (a.createAt > b.createAt) return 1;\r\n                    if (a.createAt < b.createAt) return -1;\r\n                    return 0;\r\n\r\n                default:\r\n                    return 0;\r\n            }\r\n\r\n\r\n        });\r\n        setTodoListDataState(todoListDataState);\r\n    }\r\n\r\n  return <div className=\"py-4\">\r\n        <Container>\r\n            <Row className=\"justify-content-center\">\r\n                <Col xs={12} md={8}>\r\n                    <TodoCreate todoListDataChage={todoListDataChage}/>\r\n                </Col>\r\n                <Col xs={12} md={12}>\r\n\r\n                    {todoListDataState.length===0?(\r\n                        <></>\r\n                    ):(\r\n                        <div className=\"py-3\">\r\n                            <Form onSubmit={(e)=>changeOrder(e)}>\r\n                                <Row>\r\n                                    <Col className=\"align-self-center\" xs=\"auto\">\r\n                                        Change order\r\n                                    </Col>\r\n                                    <Col xs=\"auto\" className=\"pe-1\">\r\n                                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                                            <Form.Select value={selectOrder} onChange={(e) => setSelectOrder(e.target.value)}>\r\n                                                <option value=\"title\">title</option>\r\n                                                <option value=\"description\">description</option>\r\n                                                <option value=\"dateMax\">date of expire</option>\r\n                                                <option value=\"createAt\">date create</option>\r\n                                            </Form.Select>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col xs=\"auto\" className=\"mx-3\">\r\n                                        <Button variant=\"primary\" type=\"submit\">\r\n                                            <ImSortAmountDesc size=\"1.5em\"/>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </div>\r\n                    )}\r\n                    <AnimateGroup animation=\"bounce\" >\r\n                    {todoListDataState.length===0?(\r\n                        <div className=\"text-center\">\r\n                            <object type=\"image/svg+xml\" data={logoImg} className=\"img-fluid\" width=\"50%\">svg-animation</object>\r\n                        </div>\r\n                    ):(\r\n                        todoListDataState.map((todoL)=>{\r\n                            return <TodoItem key={todoL._id} todoL={todoL} todoListDataChage={todoListDataChage}/>\r\n                        })\r\n                    )}\r\n                    </AnimateGroup>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        </div>\r\n}\r\nexport default Home","export default __webpack_public_path__ + \"static/media/logo512.8036e316.png\";","import React from \"react\";\r\nimport {Container, Navbar} from \"react-bootstrap\";\r\nimport LogoImg from \"../assets/images/logo512.png\"\r\n\r\nconst Header = () => {\r\n  return <header>\r\n          <Navbar bg=\"dark\" variant=\"dark\">\r\n            <Container>\r\n              <Navbar.Brand href=\"/\">\r\n                  <img src={LogoImg} className=\"mx-3 d-inline-block\" width=\"40\" alt=\"img-logo\"/>\r\n                  LYA Electronic To-Do\r\n              </Navbar.Brand>\r\n            </Container>\r\n          </Navbar>\r\n      </header>\r\n}\r\nexport default Header","import React from \"react\";\r\nimport logoImg from \"../assets/images/logo512.png\"\r\nimport {Container} from \"react-bootstrap\";\r\nconst Footer = () => {\r\n    let today = new Date();\r\n    let year = today.getFullYear();\r\n  return <footer className=\"border-top py-3 mt-auto\">\r\n              <Container>\r\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                      <p className=\"col-md-5 mb-0 text-muted\">{year} LYA Electronic To-Do</p>\r\n                      <a href=\"/\"\r\n                         className=\"col-md-2 d-flex align-items-center justify-content-center me-md-auto m-auto link-dark text-decoration-none\">\r\n                          <img src={logoImg} alt=\"logo\" className=\"img-fluid\" width=\"70\"/>\r\n                      </a>\r\n                      <ul className=\"nav col-md-5 col-12 justify-content-md-end justify-content-center\">\r\n                          <li className=\"nav-item\">\r\n                              <a href=\"https://wa.me/573146869798\" target=\"_blank\" rel=\"noreferrer\" className=\"nav-link px-2 text-muted\">WhatsApp</a>\r\n                          </li>\r\n                          <li className=\"nav-item\">\r\n                              <a href=\"https://github.com/miguel2armas\" target=\"_blank\" rel=\"noreferrer\" className=\"nav-link px-2 text-muted\">GitHub</a>\r\n                          </li>\r\n                          <li className=\"nav-item\">\r\n                              <a href=\"https://miguel-armas.com/\" target=\"_blank\" rel=\"noreferrer\" className=\"nav-link px-2 text-muted\">miguel-armas.com</a>\r\n                          </li>\r\n                      </ul>\r\n                  </div>\r\n              </Container>\r\n  </footer>\r\n}\r\nexport default Footer","import 'bootstrap/dist/css/bootstrap.min.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'react-notifications/lib/notifications.css';\nimport './App.css';\nimport Home from \"./components/home/home\";\nimport Header from \"./components/header\";\nimport Footer from \"./components/footer\";\nimport {NotificationContainer} from 'react-notifications';\nfunction App() {\n  return (\n    <div>\n        <Header/>\n        <Home/>\n        <Footer/>\n        <NotificationContainer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ActionTypes } from \"../constants/action-types\";\r\n//let todoList = localStorage.getItem('ToDoList')===null?[] : JSON.parse(localStorage.getItem('ToDoList'));\r\n\r\n\r\nconst intialState = [];\r\nexport const todoListReducer = (state = intialState, { type, payload }) => {\r\n    switch (type) {\r\n        case ActionTypes.INIT_TODO_LIST:\r\n            return payload;\r\n        case ActionTypes.CREATE_TODO_LIST:\r\n            return payload;\r\n        case ActionTypes.COMPLETE_TODO_LIST:\r\n            return payload;\r\n        case ActionTypes.EDIT_TODO_LIST:\r\n            return { ...state, todoList: payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import { combineReducers } from \"redux\";\r\nimport {todoListReducer} from \"./todoListReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    todoList: todoListReducer\r\n});\r\nexport default reducers;","import { createStore } from \"redux\";\r\n\r\nimport reducers from \"./reducers/index\";\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    {},\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}